{"version":3,"sources":["webpack:///./src/pages/interim/dbot/_hero.js","webpack:///./src/pages/interim/dbot/_love-trading.js","webpack:///./src/pages/interim/dbot/index.js"],"names":["Hero","data","bg","p","fw","fd","max_width","ai","as","mb","align","lh","localize","weight","width","secondary","to","is_white","alt","mt","Height","styled","Section","LoveTrading","jc","position","external","white","deriv_app_url","target","rel","WithIntl","type","interim_type","title","no_index"],"mappings":"8NAyEeA,EAjDF,WACT,IAAMC,EAAI,OACV,OACI,oCACI,kBAAC,IAAD,CAASC,GAAG,qBAAqBC,EAAE,UAC/B,kBAAC,IAAD,CAAWC,GAAG,QACV,kBAAC,IAAD,CAAgBC,GAAG,SAASC,UAAU,UAAUC,GAAG,UAC/C,kBAAC,IAAD,CAAkBC,GAAG,KAAKC,GAAG,SAASC,MAAM,SAASC,GAAG,QACnDC,YAAS,kCAEd,kBAAC,IAAD,CAAQJ,GAAG,KAAKK,OAAO,SAASJ,GAAG,OAAOC,MAAM,UAC3CE,YAAS,6CAEd,kBAAC,IAAD,CAASE,MAAM,OAAOT,GAAG,SAASE,GAAG,UACjC,kBAAC,IAAD,CAAWQ,WAAS,EAACC,GAAG,KACnBJ,YAAS,sBAEd,kBAAC,IAAD,CAAWK,UAAQ,MAG3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIH,MAAM,OACNb,KAAMA,EAAI,KACViB,IAAKN,YAAS,qBAGtB,kBAAC,IAAD,CAAQO,GAAG,OAAOd,GAAG,SAASE,GAAG,UAC7B,kBAAC,IAAD,CAAWQ,WAAS,EAACC,GAAG,KACnBJ,YAAS,sBAEd,kBAAC,IAAD,CAAWK,UAAQ,OAI/B,kBAAC,IAAD,CAAWd,EAAE,SAASE,GAAG,UACrB,kBAAC,IAAD,CAAQG,GAAG,KAAKK,OAAO,SAASH,MAAM,SAASD,GAAG,UAC7CG,YAAS,+DAEd,kBAAC,IAAD,CAAQJ,GAAG,KAAKK,OAAO,SAASH,MAAM,UACjCE,YACG,gP,gDCvClBQ,EAASC,YAAOC,KAAV,wEAAGD,CAAH,kGAoDGE,EA1CK,WAChB,IAAMtB,EAAI,OACV,OACI,oCACI,kBAACmB,EAAD,CAAQjB,EAAE,YACN,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYF,KAAMA,EAAI,KAAUa,MAAM,WAE1C,kBAAC,IAAD,CAAYU,GAAG,gBAAgBC,SAAS,YACpC,kBAAC,IAAD,CAAMpB,GAAG,SAASE,GAAG,SAASD,UAAU,WACpC,kBAAC,IAAD,CAAQE,GAAG,KAAKC,GAAG,OAAOC,MAAM,UAC3BE,YAAS,wCAEd,kBAAC,IAAD,CAAWG,WAAS,EAACC,GAAG,KACnBJ,YAAS,wBAEd,kBAAC,IAAD,OAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYX,KAAMA,EAAI,KAAUa,MAAM,WAG1C,kBAAC,IAAD,CAASA,MAAM,OAAOT,GAAG,SAASE,GAAG,UACjC,kBAAC,IAAD,CAAOC,GAAG,KAAKC,GAAG,OAAOC,MAAM,UAC1BE,YAAS,qBAEd,kBAAC,IAAD,CACIc,UAAQ,EACRC,OAAK,EACLX,GAAIY,IAAgB,OACpBC,OAAO,SACPC,IAAI,uBAEHlB,YAAS,+B,YC3CvBmB,yBAhBC,WACZ,OACI,kBAAC,IAAD,CAAQC,KAAK,UAAUC,aAAa,QAChC,kBAAC,IAAD,CAAKC,MAAOtB,YAAS,kBAAmBuB,UAAQ,IAChD,kBAAC,EAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,EAAD,W","file":"component---src-pages-interim-dbot-index-js-9b91d526a2f2afb6303b.js","sourcesContent":["import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport {\n    Section,\n    ResponsiveHeader,\n    ImgWrapper,\n    ResponsiveFlex,\n    FitButton,\n    Desktop,\n    Mobile,\n} from '../_hero'\nimport CtaBinary from '../_cta-binary'\nimport { Container } from 'components/containers'\nimport { Header, QueryImage } from 'components/elements'\nimport { localize } from 'components/localization'\n\nconst query = graphql`\n    query {\n        dbot: file(relativePath: { eq: \"interim-dbot-bg.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst Hero = () => {\n    const data = useStaticQuery(query)\n    return (\n        <>\n            <Section bg=\"var(--color-black)\" p=\"8rem 0\">\n                <Container fw=\"wrap\">\n                    <ResponsiveFlex fd=\"column\" max_width=\"58.8rem\" ai=\"center\">\n                        <ResponsiveHeader as=\"h2\" mb=\"1.2rem\" align=\"center\" lh=\"1.25\">\n                            {localize('Introducing DBot on Deriv.com')}\n                        </ResponsiveHeader>\n                        <Header as=\"h4\" weight=\"normal\" mb=\"4rem\" align=\"center\">\n                            {localize('Our improved bot builder at our new home')}\n                        </Header>\n                        <Desktop width=\"auto\" fd=\"column\" ai=\"center\">\n                            <FitButton secondary to=\"/\">\n                                {localize('Explore Deriv.com')}\n                            </FitButton>\n                            <CtaBinary is_white />\n                        </Desktop>\n                    </ResponsiveFlex>\n                    <ImgWrapper>\n                        <QueryImage\n                            width=\"100%\"\n                            data={data['dbot']}\n                            alt={localize('DBOT platforms')}\n                        />\n                    </ImgWrapper>\n                    <Mobile mt=\"4rem\" fd=\"column\" ai=\"center\">\n                        <FitButton secondary to=\"/\">\n                            {localize('Explore Deriv.com')}\n                        </FitButton>\n                        <CtaBinary is_white />\n                    </Mobile>\n                </Container>\n            </Section>\n            <Container p=\"8rem 0\" fd=\"column\">\n                <Header as=\"h4\" weight=\"normal\" align=\"center\" mb=\"3.6rem\">\n                    {localize('You read right. We are rebranding Binary.com to Deriv.com.')}\n                </Header>\n                <Header as=\"h4\" weight=\"normal\" align=\"center\">\n                    {localize(\n                        'Hereâ€™s why: In 2019, we celebrated our 20th year anniversary. Inspired by your love for online trading, we decided to create something new as part of our renewed commitment to making online trading effortless and accessible for you.',\n                    )}\n                </Header>\n            </Container>\n        </>\n    )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport {\n    Section,\n    Responsive,\n    AbsoluteWrapper,\n    MarLeft,\n    FitButton,\n    White,\n    MobileWrapper,\n} from '../_love-trading'\nimport CtaBinary from '../_cta-binary'\nimport { Flex } from 'components/containers'\nimport { Header, QueryImage } from 'components/elements'\nimport { localize } from 'components/localization'\nimport { deriv_app_url } from 'common/utility'\n\nconst query = graphql`\n    query {\n        dbot: file(relativePath: { eq: \"interim-dbot.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst Height = styled(Section)`\n    min-height: 306px;\n    display: flex;\n    align-items: center;\n\n    @media (max-width: 1390px) {\n        min-height: auto;\n    }\n`\n\nconst LoveTrading = () => {\n    const data = useStaticQuery(query)\n    return (\n        <>\n            <Height p=\"3.2rem 0\">\n                <AbsoluteWrapper>\n                    <QueryImage data={data['dbot']} width=\"54rem\" />\n                </AbsoluteWrapper>\n                <Responsive jc=\"space-between\" position=\"relative\">\n                    <Flex fd=\"column\" ai=\"center\" max_width=\"28.2rem\">\n                        <Header as=\"h3\" mb=\"4rem\" align=\"center\">\n                            {localize('Be among the first to try Deriv.com')}\n                        </Header>\n                        <FitButton secondary to=\"/\">\n                            {localize('Visit Deriv.com now')}\n                        </FitButton>\n                        <CtaBinary />\n                    </Flex>\n                    <MobileWrapper>\n                        <QueryImage data={data['dbot']} width=\"30rem\" />\n                    </MobileWrapper>\n\n                    <MarLeft width=\"auto\" fd=\"column\" ai=\"center\">\n                        <White as=\"h3\" mb=\"3rem\" align=\"center\">\n                            {localize('Love Binary Bot?')}\n                        </White>\n                        <FitButton\n                            external\n                            white\n                            to={deriv_app_url + '/bot'}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {localize('Try DBot on Deriv.com')}\n                        </FitButton>\n                    </MarLeft>\n                </Responsive>\n            </Height>\n        </>\n    )\n}\n\nexport default LoveTrading\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Everything from '../_everything'\nimport FAQ from '../_faq'\nimport Hero from './_hero'\nimport LoveTrading from './_love-trading'\nimport { SEO } from 'components/containers'\nimport Layout from 'components/layout/layout'\nimport { localize, WithIntl } from 'components/localization'\n\nconst Interim = () => {\n    return (\n        <Layout type=\"interim\" interim_type=\"dbot\">\n            <SEO title={localize('Interim | DBot')} no_index />\n            <Hero />\n            <Everything />\n            <FAQ />\n            <LoveTrading />\n        </Layout>\n    )\n}\n\nInterim.propTypes = {\n    referrer: PropTypes.string,\n}\n\nexport default WithIntl()(Interim)\n"],"sourceRoot":""}
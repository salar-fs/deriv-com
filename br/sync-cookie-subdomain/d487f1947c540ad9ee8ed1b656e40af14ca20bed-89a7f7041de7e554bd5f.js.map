{"version":3,"sources":["webpack:///./src/components/custom/_dbanner.js","webpack:///./src/components/custom/_dhero.js","webpack:///./src/components/custom/_dhow-it-works.js","webpack:///./src/components/custom/_dtrading.js","webpack:///./src/components/custom/_dnumbers.js"],"names":["Wrapper","styled","div","BackgroundWrapper","Flex","props","background_pattern","ImageContainer","ImageWrapper","TextWrapper","DemoButton","StyledHeader","Header","device","laptopM","DBanner","title","data","ai","alt","width","direction","align","color","size","mb","type","secondary","to","localize","tabletL","tablet","HeroContent","LottieWrapper","laptop","tabletS","mobileL","mobileM","LinkWrapper","GoToLiveDemo","Button","LinkButton","StyledContent","InformationWrapper","DHero","background_alt","background_svg","content","image_name","is_mobile","join_us_for_free","go_to_live_demo","Logo","DLogo","BackgroundSVG","height","as","weight","tertiary","onClick","path","window","open","deriv_app_url","DHowItWorks","Video","justify","mt","StyledSection","SectionContainer","StyledContainer","Container","Content","margin_right","Text","Row","flex_direction","DTrading","trading","reverse","two_title","map","item","index","is_even","key","subtitle","second_title","second_subtitle","image_alt","NumberWrapper","DNumbers","items","padding"],"mappings":"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","file":"d487f1947c540ad9ee8ed1b656e40af14ca20bed-89a7f7041de7e554bd5f.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { Flex } from 'components/containers'\nimport { Header, QueryImage } from 'components/elements'\nimport { LinkButton } from 'components/form'\nimport { localize } from 'components/localization'\nimport device from 'themes/device.js'\n\nconst Wrapper = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    height: 33.3rem;\n    width: 100%;\n    overflow: hidden;\n    border-top: 1px solid rgba(151, 151, 151, 0.2);\n    background-color: var(--color-black);\n\n    @media (max-width: 800px) {\n        flex-direction: column;\n        height: 414px;\n    }\n`\n\nconst BackgroundWrapper = styled(Flex)`\n    width: 25%;\n    background-image: url(${(props) => props.background_pattern});\n    clip-path: polygon(0 0, 100% 0%, 80% 100%, 0% 100%);\n\n    @media (max-width: 800px) {\n        clip-path: polygon(0 0, 100% 0%, 305% 163%, 0% 60%);\n        width: 100%;\n        height: 50%;\n    }\n`\n\nconst ImageContainer = styled.div`\n    position: absolute;\n    left: 5%;\n    height: 100%;\n\n    @media (max-width: 800px) {\n        left: 0;\n        height: unset;\n        width: 100%;\n        top: 12%;\n        margin-bottom: 2rem;\n    }\n`\n\nconst ImageWrapper = styled(Flex)`\n    position: relative;\n    width: 41.1rem;\n    z-index: 2;\n    height: 100%;\n\n    div {\n        width: 100%;\n    }\n\n    @media (max-width: 1350px) {\n        width: 30rem;\n    }\n    @media (max-width: 800px) {\n        height: auto;\n        width: 286px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst TextWrapper = styled.div`\n    margin: auto;\n\n    @media (max-width: 800px) {\n        margin-top: 35px;\n        margin-bottom: 40px;\n    }\n`\nconst DemoButton = styled.div`\n    text-align: center;\n    height: auto;\n\n    @media (max-width: 800px) {\n        margin: unset;\n    }\n`\nconst StyledHeader = styled(Header)`\n    @media ${device.laptopM} {\n        font-size: 4rem;\n        max-width: 60rem;\n    }\n    @media (max-width: 800px) {\n        font-size: 24px;\n        max-width: 329px;\n    }\n`\nconst DBanner = ({ title, data, background_pattern }) => {\n    return (\n        <Wrapper>\n            <ImageContainer>\n                <ImageWrapper ai=\"center\">\n                    <QueryImage data={data['deriv_platform']} alt=\"deriv platform\" width=\"100%\" />\n                </ImageWrapper>\n            </ImageContainer>\n            <BackgroundWrapper\n                background_pattern={background_pattern}\n                direction=\"column\"\n                ai=\"center\"\n            ></BackgroundWrapper>\n            <TextWrapper>\n                <StyledHeader align=\"center\" color=\"white\" size=\"5.6rem\" mb=\"3.2rem\">\n                    {title}\n                </StyledHeader>\n                <DemoButton>\n                    <LinkButton type=\"submit\" secondary=\"true\" to=\"/signup/\">\n                        {localize('Create free demo account')}\n                    </LinkButton>\n                </DemoButton>\n            </TextWrapper>\n        </Wrapper>\n    )\n}\n\nDBanner.propTypes = {\n    background_pattern: PropTypes.object,\n    data: PropTypes.object.isRequired,\n    title: PropTypes.string,\n}\n\nexport default DBanner\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { deriv_app_url } from 'common/utility'\nimport { localize } from 'components/localization'\nimport { Flex } from 'components/containers'\nimport { Header, QueryImage } from 'components/elements'\nimport { Button, LinkButton } from 'components/form'\nimport device from 'themes/device.js'\n\nconst Wrapper = styled.div`\n    position: relative;\n    background-color: var(--color-black);\n    width: 100%;\n    display: flex;\n    height: 575px;\n    padding: 12rem 12rem 9rem 12rem;\n\n    @media ${device.laptopM} {\n        max-height: 429px;\n        padding: 8rem 12rem 8rem 4rem;\n    }\n    @media ${device.tabletL} {\n        min-height: 304px;\n        flex-direction: column;\n    }\n    @media ${device.tablet} {\n        flex-direction: column-reverse;\n        max-height: 640px;\n        padding: 0 16px 40px 16px;\n    }\n`\nconst HeroContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n\n    ${Header} {\n        color: var(--color-white);\n        display: flex;\n        margin-top: 1.5rem;\n        line-height: 1.25;\n    }\n\n    @media ${device.laptopM} {\n        ${Header} {\n            font-size: 32px;\n        }\n    }\n`\nconst StyledHeader = styled(Header)`\n    color: var(--color-white);\n    display: flex;\n    margin-top: 0;\n    font-size: 2.4rem;\n\n    @media ${device.laptopM} {\n        font-size: 24px;\n    }\n`\n\nconst LottieWrapper = styled.div`\n    width: 100%;\n    max-width: 606px;\n    position: absolute;\n    top: 10.8rem;\n    right: 12rem;\n\n    @media ${device.laptopM} {\n        max-width: 500px;\n        top: 8rem;\n        right: 8rem;\n    }\n    @media ${device.laptop} {\n        max-width: 450px;\n        right: 10rem;\n    }\n    @media ${device.tabletL} {\n        max-width: 390px;\n        top: 5rem;\n        right: 2rem;\n    }\n    @media ${device.tabletS} {\n        max-width: 380px;\n        top: 5rem;\n        right: 2rem;\n    }\n    @media ${device.mobileL} {\n        max-width: 328px;\n        top: 34px;\n        left: 50%;\n        right: unset;\n        transform: translateX(-50%);\n    }\n    @media ${device.mobileM} {\n        max-width: 280px;\n        top: 34px;\n        left: 50%;\n        right: unset;\n        transform: translateX(-50%);\n    }\n`\n\nconst LinkWrapper = styled.div`\n    display: flex;\n    margin-top: 3.2rem;\n\n    @media (max-width: 1420px) {\n        top: 480px;\n    }\n    @media ${device.laptopM} {\n        top: 350px;\n    }\n    @media ${device.tabletL} {\n        top: 236px;\n    }\n    @media ${device.tablet} {\n        position: unset;\n        top: unset;\n        justify-content: start;\n    }\n    @media (max-width: 460px) {\n        flex-wrap: wrap;\n    }\n`\n\nconst GoToLiveDemo = styled(Button)`\n    color: var(--color-white);\n    border-color: var(--color-black-5);\n    margin-left: 1.6rem;\n    padding: 1.1rem 1.6rem;\n    width: auto;\n\n    @media ${device.laptopM} {\n        font-size: 14px;\n        margin-left: 0;\n    }\n    @media ${device.mobileL} {\n        max-width: 100%;\n        padding: 10px 11px;\n        white-space: nowrap;\n    }\n`\nconst DemoButton = styled(LinkButton)`\n    padding: 1.4rem 1.6rem;\n    width: auto;\n    font-size: 14px;\n    margin-right: 2px;\n    border: unset;\n\n    @media ${device.mobileL} {\n        padding: 1.5rem 1.6rem;\n        height: 42px;\n        white-space: nowrap;\n    }\n    @media (max-width: 460px) {\n        margin-bottom: 2rem;\n    }\n`\nconst StyledContent = styled(Header)`\n    font-size: 5.6rem;\n\n    @media (max-width: 1322px) {\n        font-size: 4.2rem;\n    }\n`\nconst InformationWrapper = styled(Flex)`\n    width: 100%;\n    max-width: 562px;\n\n    @media (max-width: 1320px) {\n        max-width: 450px;\n    }\n    @media ${device.laptop} {\n        max-width: 390px;\n    }\n    @media ${device.laptopM} {\n        max-width: 410px;\n    }\n    @media ${device.tabletL} {\n        width: 46%;\n        max-width: 400px;\n        top: 60px;\n    }\n    @media ${device.tablet} {\n        width: 100%;\n        top: 350px;\n    }\n    @media ${device.mobileL} {\n        top: 280px;\n        max-width: 328px;\n    }\n    @media ${device.mobileM} {\n        top: 230px;\n        max-width: 328px;\n    }\n`\n\nconst query = graphql`\n    query {\n        dbot: file(relativePath: { eq: \"dbot_trade.png\" }) {\n            ...fadeIn\n        }\n        dmt5: file(relativePath: { eq: \"dmt5_trade.png\" }) {\n            ...fadeIn\n        }\n        dtrader: file(relativePath: { eq: \"dtrader_trade.png\" }) {\n            ...fadeIn\n        }\n        dtrader_mobile: file(relativePath: { eq: \"dtrader_trade_mobile.png\" }) {\n            ...fadeIn\n        }\n        dbot_mobile: file(relativePath: { eq: \"dbot_trade_mobile.png\" }) {\n            ...fadeIn\n        }\n        dmt5_mobile: file(relativePath: { eq: \"dmt5_trade_mobile.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst DHero = ({\n    title,\n    background_alt,\n    background_svg,\n    content,\n    image_name,\n    is_mobile,\n    join_us_for_free,\n    go_to_live_demo,\n    Logo,\n}) => {\n    const data = useStaticQuery(query)\n    const handleRedirect = () => {\n        const path = image_name === 'dbot' ? '/bot' : '/'\n        window.open(deriv_app_url + path, '_blank')\n    }\n    const DLogo = styled(Logo)`\n        margin-right: 1.6rem;\n    `\n    const BackgroundSVG = styled(background_svg)`\n        position: absolute;\n        top: 0;\n        right: 0;\n        height: 100%;\n\n        @media ${device.laptopM} {\n            width: 48%;\n            max-width: 492px;\n            height: initial;\n        }\n        @media ${device.laptop} {\n            width: 50%;\n        }\n        @media ${device.tabletL} {\n            width: 45%;\n            max-width: 350px;\n        }\n        @media ${device.tablet} {\n            width: 70%;\n        }\n        @media ${device.tabletS} {\n            width: 80%;\n            max-width: 337px;\n        }\n        @media ${device.mobileL} {\n            max-width: 250px;\n            min-height: 244px;\n        }\n        @media ${device.mobileM} {\n            max-width: 205px;\n            min-height: 0;\n        }\n    `\n    return (\n        <Wrapper>\n            <BackgroundSVG />\n            <InformationWrapper height=\"unset\" direction=\"column\">\n                <StyledHeader as=\"h1\" weight={500}>\n                    <DLogo />\n                    {title}\n                </StyledHeader>\n                <HeroContent>\n                    <StyledContent as=\"h2\">{content}</StyledContent>\n                </HeroContent>\n                <LinkWrapper>\n                    {join_us_for_free && (\n                        <DemoButton secondary=\"true\" to=\"/signup/\">\n                            {localize('Create free demo account')}\n                        </DemoButton>\n                    )}\n                    {go_to_live_demo && (\n                        <GoToLiveDemo tertiary onClick={handleRedirect}>\n                            {localize('Go to live demo')}\n                        </GoToLiveDemo>\n                    )}\n                </LinkWrapper>\n            </InformationWrapper>\n\n            <LottieWrapper>\n                <QueryImage\n                    data={data[is_mobile ? image_name + '_mobile' : image_name]}\n                    alt={background_alt}\n                />\n            </LottieWrapper>\n        </Wrapper>\n    )\n}\n\nDHero.propTypes = {\n    background_alt: PropTypes.string,\n    background_image_name: PropTypes.string,\n    background_svg: PropTypes.func,\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    go_to_live_demo: PropTypes.bool,\n    image_name: PropTypes.string,\n    is_mobile: PropTypes.bool,\n    join_us_for_free: PropTypes.bool,\n    Logo: PropTypes.func,\n    title: PropTypes.string,\n}\n\nexport default DHero\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { localize } from 'components/localization'\nimport { Container, SectionContainer } from 'components/containers'\nimport { Header } from 'components/elements'\nimport device from 'themes/device.js'\n\nconst StyledHeader = styled(Header)`\n    @media ${device.tabletL} {\n        text-align: left;\n        ${(props) =>\n            props.as === 'h4' ? 'font-size: var(--text-size-sm);' : 'font-size: var(--text-size-l)'}\n    }\n`\n\nconst DHowItWorks = ({ Video, title }) => {\n    return (\n        <SectionContainer>\n            <Container justify=\"center\" direction=\"column\">\n                <StyledHeader as=\"h4\" align=\"center\" weight=\"500\">\n                    {localize('How it works')}\n                </StyledHeader>\n                <StyledHeader as=\"h2\" align=\"center\" size=\"var(--text-size-l)\" mt=\"0.9rem\">\n                    {title}\n                </StyledHeader>\n                <Video />\n            </Container>\n        </SectionContainer>\n    )\n}\n\nDHowItWorks.propTypes = {\n    title: PropTypes.string,\n    Video: PropTypes.func,\n}\nexport default DHowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport device from 'themes/device'\nimport { Container, SectionContainer } from 'components/containers'\nimport { Header, Text, QueryImage } from 'components/elements'\n\nconst StyledSection = styled(SectionContainer)`\n    background-color: var(--color-white);\n    box-shadow: inset 1px 0 0 1px var(--color-grey-2);\n\n    @media ${device.tabletL} {\n        padding: 1.74rem 0 4rem 0;\n    }\n`\nconst StyledContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n`\nconst Content = styled.div`\n    width: 100%;\n    max-width: 58.8rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: ${(props) => props.margin_right};\n\n    ${Text} {\n        margin-top: 2.2rem;\n    }\n\n    @media ${device.tabletL} {\n        margin: 0 auto;\n    }\n`\n\nconst ImageWrapper = styled.div`\n    max-width: 58.8rem;\n    width: 100%;\n    max-height: 30rem;\n    margin-right: ${(props) => props.margin_right};\n\n    @media ${device.tabletL} {\n        margin: 2rem auto;\n    }\n`\nconst StyledHeader = styled(Header)`\n    font-size: var(--text-size-l);\n    line-height: 1.25;\n\n    @media ${device.tabletL} {\n        margin-top: 2rem;\n    }\n`\nconst Row = styled.div`\n    flex-direction: ${(props) => props.flex_direction};\n    width: 100%;\n    display: flex;\n    margin-top: 4rem;\n\n    &:first-child {\n        margin-top: 0;\n    }\n\n    @media ${device.tabletL} {\n        flex-direction: column;\n    }\n`\nconst query = graphql`\n    query {\n        dbot_strategy: file(relativePath: { eq: \"dbot-strategy.png\" }) {\n            ...fadeIn\n        }\n        dbot_build_strategy: file(relativePath: { eq: \"dbot-build-strategy.png\" }) {\n            ...fadeIn\n        }\n        dbot_maximise_profits: file(relativePath: { eq: \"dbot-maximise-profits.png\" }) {\n            ...fadeIn\n        }\n        dbot_track_your_performance: file(relativePath: { eq: \"dbot-track-your-performance.png\" }) {\n            ...fadeIn\n        }\n        dbot_get_integrated_help: file(relativePath: { eq: \"dbot-get-integrated-help.png\" }) {\n            ...fadeIn\n        }\n        dbot_save_your_strategies: file(relativePath: { eq: \"dbot-save-your-strategies.png\" }) {\n            ...fadeIn\n        }\n        dmt_5_ipad_iphone: file(relativePath: { eq: \"dmt-5-ipad-iphone.png\" }) {\n            ...fadeIn\n        }\n        dmt_5_mac: file(relativePath: { eq: \"dmt-5-mac.png\" }) {\n            ...fadeIn\n        }\n        make_smarter: file(relativePath: { eq: \"make-smarter.png\" }) {\n            ...fadeIn\n        }\n        trade_what_you_want: file(relativePath: { eq: \"trade-what-you-want.png\" }) {\n            ...fadeIn\n        }\n        how_you_want: file(relativePath: { eq: \"how-you-want.png\" }) {\n            ...fadeIn\n        }\n    }\n`\nconst DTrading = ({ trading, reverse, two_title }) => {\n    const data = useStaticQuery(query)\n    return (\n        <StyledSection>\n            <StyledContainer>\n                {trading.map((item, index) => {\n                    let is_even = reverse ? (index + 1) % 2 : index % 2\n                    return (\n                        <Row flex_direction={!is_even ? 'row' : 'row-reverse'} key={index}>\n                            <Content margin_right={!is_even ? '2.4rem' : '0'}>\n                                <StyledHeader>{item.title}</StyledHeader>\n                                <Text>{item.subtitle}</Text>\n                                {two_title && (\n                                    <>\n                                        <StyledHeader mt=\"2.4rem\">{item.second_title}</StyledHeader>\n                                        <Text>{item.second_subtitle}</Text>\n                                    </>\n                                )}\n                            </Content>\n                            <ImageWrapper margin_right={!is_even ? '0' : '2.4rem'}>\n                                <QueryImage\n                                    data={data[item.image_name]}\n                                    alt={data[item.image_alt]}\n                                    width=\"100%\"\n                                />\n                            </ImageWrapper>\n                        </Row>\n                    )\n                })}\n            </StyledContainer>\n        </StyledSection>\n    )\n}\n\nDTrading.propTypes = {\n    reverse: PropTypes.bool,\n    trading: PropTypes.array,\n    two_title: PropTypes.bool,\n}\n\nexport default DTrading\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport device from 'themes/device'\nimport { Container, SectionContainer } from 'components/containers'\nimport { Header, Text } from 'components/elements'\n\nconst NumberWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 32.8rem;\n\n    ${Text} {\n        padding-top: 0.8rem;\n    }\n    @media ${device.tabletL} {\n        margin: 1.2rem 0;\n    }\n`\nconst StyledContainer = styled(Container)`\n    display: flex;\n    width: 100%;\n\n    @media ${device.tabletL} {\n        flex-direction: column;\n    }\n`\n\nconst DNumbers = ({ items, justify }) => {\n    return (\n        <SectionContainer padding=\"4rem\">\n            <StyledContainer justify={justify || 'space-between'}>\n                {items.map((item, index) => (\n                    <NumberWrapper key={index}>\n                        <Header as=\"h2\" align=\"center\">\n                            {item.title}\n                        </Header>\n                        <Text align=\"center\">{item.subtitle}</Text>\n                    </NumberWrapper>\n                ))}\n            </StyledContainer>\n        </SectionContainer>\n    )\n}\n\nDNumbers.propTypes = {\n    items: PropTypes.array,\n    justify: PropTypes.string,\n}\nexport default DNumbers\n"],"sourceRoot":""}